{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js","robots.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","lenght","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","username","document","getElementById"],"mappings":"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","file":"static/js/main.eb5f2e81.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n       </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    const cardComponent = robots.map((user, i) => {\n        return (\n        <Card key={i} \n        id={robots[i].id} \n        name={robots[i].name} \n        email={robots[i].email}\n        />\n        )\n    })\n    return (\n        <div>\n            {cardComponent}\n       </div>\n    );\n    }\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className=\"pa2\">\n        <input \n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type='search' \n        placeholder='search robots'\n        onChange={searchChange} />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black overflow', height: '500px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import { render } from '@testing-library/react';\nimport React, { Component } from 'react';\n\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n\ncomponentDidCatch(error, info) {\n   this.setState({ hasError: true })\n}\n\n\nrender() {\n  if (this.state.hasError) {\n      return <h1>Oops, that is not good</h1>\n  }\n  return this.props.children\n}\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\n\nclass App extends Component {\n    constructor(){\n        super()\n       this.state = {\n       robots: [],\n       searchfield: ''\n      } \n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=> response.json())\n        .then(users => this.setState({robots: users}));\n        }\n    \n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n    \n    render() {\n        const filteredRobots = this.state.robots.filter(robot => {\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n        if (this.state.robots.lenght === 0) {\n            return <h1>Loading</h1>\n        } else {\n    return (\n        <div className='tc'>\n        <h1 className=\"f1\">Robofriends</h1>\n        <SearchBox searchChange={this.onSearchChange}/>\n        <Scroll>\n           <ErrorBoundry>\n          <CardList robots={filteredRobots}/>\n          </ErrorBoundry>\n        </Scroll>\n        </div>\n    );\n    }\n}\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport { robots } from './robots';\n\nReactDOM.render(\n                <App robots={robots}/>\n                  ,document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n"],"sourceRoot":""}